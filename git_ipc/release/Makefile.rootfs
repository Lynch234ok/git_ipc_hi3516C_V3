#SOC_MODEL ?= hi3518a_inc
SOC_MODEL ?= hi3518c_inc

MKIMAGE_CMD ?= $(MKIMAGE) -A arm -n "JUAN filesystem" -a 0x81000000 -e 0x81000000 -T ramdisk -C gzip -d rootfs.squash $(IMAGE_PATH)rootfs.squash.uboot

MKROOTFS_SQ :=
MKCRAMFS :=

MODEL_ROOTFS ?= rootfs_18c
# Hisilicon Hi3507 inception
ifeq ($(SOC_MODEL),hi3507_inc)
MODEL_NAME := "HI3507"
endif
# Hisilicon Hi3518a inception
ifeq ($(SOC_MODEL),hi3518a_inc)
MODEL_NAME := "HI3518A"
endif
# Hisilicon Hi3518c inception
ifeq ($(SOC_MODEL),hi3518c_inc)
MODEL_NAME := "HI3518C"
endif
# Hisilicon Hi3516c inception
ifeq ($(SOC_MODEL),hi3516c_inc)
MODEL_NAME := "HI3516C"
endif
# Hisilicon Hi3516d inception
ifeq ($(SOC_MODEL),hi3516d_inc)
MODEL_NAME := "HI3516A&D"
endif
# Hisilicon Hi3516a inception
ifeq ($(SOC_MODEL),hi3516a_inc)
MODEL_NAME := "HI3516A&D"
endif

# vatics m388c2g inception
ifeq ($(SOC_MODEL),m388c2g_inc)
MODEL_NAME := "M388C2G"
MKIMAGE_CMD := mv rootfs.squash image/rootfs.squash.uboot
endif

# vatics m388c2g inception
ifeq ($(SOC_MODEL),m388c1g_inc)
MODEL_NAME := "M388C1G"
MKIMAGE_CMD := mv rootfs.squash image/rootfs.squash.uboot
endif

# Hi3516ev100
ifeq ($(SOC_MODEL),hi3516e_v1_inc)
MKROOTFS_SQ := mksquashfs $(MODEL_ROOTFS) rootfs.sq -b 64k -comp xz
MKIMAGE_CMD := mkimage -A arm -n "JUAN filesystem" -a 0x81000000 -e 0x81000000 -T ramdisk -C none -d rootfs.sq  rootfs.ramdisk
MKCRAMFS := mkfs.cramfs resource resource.cramfs
endif

ENTRY_POINT := 0xe1000000
LOAD_ADDRESS := 0xe1000000

ROOTFS_NAME := "JUAN root filesystem($(shell date "+%d/%m/%Y"))"
MODULE_NAME := "rootfs"

ROOTFS_PATH := "$(CURDIR)/rootfs/"
IMAGE_PATH := "$(CURDIR)/image/"

EXT2_TEMP := "$(CURDIR)/rootfs.tmp"
EXT2_MOUNT := "$(CURDIR)/ext2_mnt"
EXT2_SIZE := 48K

MKIMAGE := "./tools/mkimage"
MKSQUASHFS := "./tools/mksquashfs_4.2"
MKFSJFFS2 := "./tools/mkfs.jffs2"
MKFSEXT2 := "./tools/mkfs.ext2"


.PHONY: rootfs backup
rootfs : squash
#rootfs : jffs2

mark :
	rm -Rf $(MODEL_ROOTFS)/*_build
	touch $(MODEL_ROOTFS)/$(shell date "+%Y%m%d_%H%M_build")


squash : mark
ifeq ($(SOC_MODEL),hi3516e_v1_inc)
	rm -Rf rootfs.sq
	$(MKROOTFS_SQ)
	$(MKIMAGE_CMD)
	mv rootfs.ramdisk $(IMAGE_PATH)
	$(MKCRAMFS)
	mv resource.cramfs $(IMAGE_PATH)
else
	$(MKSQUASHFS) $(MODEL_ROOTFS)/ rootfs.squash -all-root
	$(MKIMAGE_CMD)
	rm -Rf rootfs.squash
	$(MKSQUASHFS) resource/ rootfs.squash
	mv -f rootfs.squash $(IMAGE_PATH)rootfs.squash.resource
endif

ext2 : mark
	mkdir $(EXT2_MOUNT)
	
	dd if=/dev/zero of=$(EXT2_TEMP) bs=1K count=$(EXT2_SIZE)
	$(MKFSEXT2) -F -m 0 -i 2000 $(EXT2_TEMP)
	
	mount -o loop -t ext2 $(EXT2_TEMP) $(EXT2_MOUNT)
	cp -a $(ROOTFS_PATH)/* $(EXT2_MOUNT)
	umount $(EXT2_MOUNT)

	gzip -9f $(EXT2_TEMP)
	sync
	$(MKIMAGE) -n $(ROOTFS_NAME) -a $(LOAD_ADDRESS) -e $(ENTRY_POINT) -T ramdisk -C gzip -d $(EXT2_TEMP).gz $(MODULE_NAME).$@.uboot
	rm -Rf $(EXT2_MOUNT) $(EXT2_TEMP).gz

jffs2 : mark
	$(MKFSJFFS2) -d rootfs -o rootfs.jffs2
	$(MKIMAGE) -A arm -n $(ROOTFS_NAME) -a 0x83000000 -e 0x83000000 -T ramdisk -C gzip -d rootfs.jffs2 rootfs.jffs2.uboot


backup:
	tar --force-local -zcvf `date "+backup/rootfs-%Y%m%d-%H%M-$(MODEL_NAME).tar.gz"` rootfs;
